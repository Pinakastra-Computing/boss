"""Change customer OpenStack tenant_is and user_id column properties

Revision ID: 388ee1949b1
Revises: 32f11aca04d
Create Date: 2015-07-02 23:40:28.798590

"""

# revision identifiers, used by Alembic.
revision = '388ee1949b1'
down_revision = '32f11aca04d'
branch_labels = None
depends_on = None

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

def upgrade(engine_name):
    globals()["upgrade_%s" % engine_name]()


def downgrade(engine_name):
    globals()["downgrade_%s" % engine_name]()





def upgrade_account():
    ### commands auto generated by Alembic - please adjust! ###
    op.execute("UPDATE customer SET customer.os_tenant_id=NULL, os_user_id=NULL WHERE customer.os_tenant_id=''")

    op.alter_column('customer', 'os_tenant_id',
               existing_type=mysql.VARCHAR(length=32),
               nullable=True)
    op.alter_column('customer', 'os_user_id',
               existing_type=mysql.VARCHAR(length=32),
               nullable=True)


    op.create_unique_constraint(None, 'customer', ['os_tenant_id'])
    op.create_unique_constraint(None, 'customer', ['os_user_id'])
    ### end Alembic commands ###


def downgrade_account():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('os_tenant_id', 'customer', type_='unique')
    op.drop_constraint('os_user_id', 'customer', type_='unique')

    op.execute("UPDATE customer SET customer.os_tenant_id='0', os_user_id='0' WHERE customer.os_tenant_id is NULL")

    op.alter_column('customer', 'os_user_id',
               existing_type=mysql.VARCHAR(length=32),
               nullable=False)
    op.alter_column('customer', 'os_tenant_id',
               existing_type=mysql.VARCHAR(length=32),
               nullable=False)
    ### end Alembic commands ###


def upgrade_fitter():
    pass


def downgrade_fitter():
    pass

